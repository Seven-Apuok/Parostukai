To perform a drag and drop action in Selenium WebDriver using Java, you can use the Actions class. Here’s a step-by-step guide:

1. Set Up Your Environment
Ensure you have the Java Development Kit (JDK) installed.
Use an IDE like Eclipse or IntelliJ IDEA.
Add the Selenium Java Client library to your project.
2. Create a WebDriver Instance
Set up your WebDriver:

Java

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class DragAndDropTest {
    public static void main(String[] args) {
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();
        driver.get("https://example.com/drag-and-drop");
    }
}
AI-generated code. Review and use carefully. More info on FAQ.
3. Locate the Elements
Identify the elements you want to drag and drop:

Java

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

WebElement sourceElement = driver.findElement(By.id("source"));
WebElement targetElement = driver.findElement(By.id("target"));
AI-generated code. Review and use carefully. More info on FAQ.
4. Perform Drag and Drop
Use the Actions class to perform the drag and drop:

Java

import org.openqa.selenium.interactions.Actions;

Actions actions = new Actions(driver);
actions.dragAndDrop(sourceElement, targetElement).build().perform();
AI-generated code. Review and use carefully. More info on FAQ.
5. Complete Example
Here’s a complete example combining all the steps:

Java

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;

public class DragAndDropTest {
    public static void main(String[] args) {
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();
        driver.get("https://example.com/drag-and-drop");

        WebElement sourceElement = driver.findElement(By.id("source"));
        WebElement targetElement = driver.findElement(By.id("target"));

        Actions actions = new Actions(driver);
        actions.dragAndDrop(sourceElement, targetElement).build().perform();

        driver.quit();
    }
}
AI-generated code. Review and use carefully. More info on FAQ.
Additional Methods
You can also use other methods from the Actions class for more complex drag and drop actions:

clickAndHold: Clicks (without releasing) at the current mouse location.
moveToElement: Moves the mouse to the middle of the element.
release: Releases the pressed mouse button at the current mouse location.
Example:

Java

actions.clickAndHold(sourceElement)
       .moveToElement(targetElement)
       .release()
       .build()
       .perform();
AI-generated code. Review and use carefully. More info on FAQ.
For more detailed information, you can refer to resources like Guru991 and BrowserStack2.

Would you like more details on any specific part of this process?

Learn more

1

guru99.com
2

browserstack.com
3

github.com