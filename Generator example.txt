To create a generator for email and username with specific restrictions using Selenium in Java, you can use the `Faker` library to generate random data and then use Selenium to interact with web elements. Here’s a step-by-step guide:

### Step-by-Step Guide

1. **Install Required Libraries**:
   Ensure you have Selenium and Faker installed. You can add these dependencies to your `pom.xml` if you are using Maven.

   ```xml
   <dependencies>
       <dependency>
           <groupId>org.seleniumhq.selenium</groupId>
           <artifactId>selenium-java</artifactId>
           <version>4.1.0</version>
       </dependency>
       <dependency>
           <groupId>com.github.javafaker</groupId>
           <artifactId>javafaker</artifactId>
           <version>1.0.2</version>
       </dependency>
   </dependencies>
   ```

2. **Set Up Selenium WebDriver**:
   Initialize the WebDriver for your browser (e.g., Chrome).

3. **Generate Random Data**:
   Use Faker to generate random usernames and emails with specific restrictions.

4. **Fill the Form and Save Data**:
   Use Selenium to interact with the web elements and save the generated data.

### Example Code

Here’s a complete example in Java:

```java
import com.github.javafaker.Faker;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import java.io.FileWriter;
import java.io.IOException;

public class UserGenerator {
    public static void main(String[] args) {
        // Set up Faker
        Faker faker = new Faker();

        // Generate random login and email with specific restrictions
        String randomLogin = faker.regexify("[a-zA-Z0-9]{8,12}");
        String randomEmail = faker.bothify("????##@example.com");

        // Save the generated data to a file
        try (FileWriter writer = new FileWriter("generated_data.txt")) {
            writer.write("Login: " + randomLogin + "\n");
            writer.write("Email: " + randomEmail + "\n");
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Set up Selenium WebDriver
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();

        // Open the target website
        driver.get("https://example.com/register");

        // Fill in the registration form
        WebElement loginField = driver.findElement(By.id("login"));
        WebElement emailField = driver.findElement(By.id("email"));
        WebElement passwordField = driver.findElement(By.id("password"));
        WebElement submitButton = driver.findElement(By.id("submit"));

        loginField.sendKeys(randomLogin);
        emailField.sendKeys(randomEmail);
        passwordField.sendKeys("YourSecurePassword");

        // Submit the form
        submitButton.click();

        // Close the browser
        driver.quit();
    }
}
```

### Explanation

1. **Faker Library**:
   - `faker.regexify("[a-zA-Z0-9]{8,12}")` generates a random username with 8 to 12 alphanumeric characters.
   - `faker.bothify("????##@example.com")` generates a random email with a specific pattern.

2. **Saving Data**:
   - The generated login and email are saved to a text file.

3. **Selenium WebDriver**:
   - The WebDriver opens the target website, fills in the registration form with the generated data, and submits the form.

This example should help you get started with generating random logins and emails using Selenium in Java. If you have any specific requirements or run into issues, feel free to ask!