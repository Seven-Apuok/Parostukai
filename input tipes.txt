In Selenium WebDriver with Java, you can interact with various web elements using different types of inputs. Here are some of the most common actions you can perform

1. Click
Clicking on elements like buttons, links, checkboxes, etc.

Java

WebElement button = driver.findElement(By.id(buttonId));
button.click();
AI-generated code. Review and use carefully. More info on FAQ.

2. Send Keys
Entering text into input fields, text areas, etc.

Java

WebElement textField = driver.findElement(By.id(textFieldId));
textField.sendKeys(Sample text);
AI-generated code. Review and use carefully. More info on FAQ.

3. Clear
Clearing the content of input fields.

Java

WebElement textField = driver.findElement(By.id(textFieldId));
textField.clear();
AI-generated code. Review and use carefully. More info on FAQ.

4. Submit
Submitting a form.

Java

WebElement form = driver.findElement(By.id(formId));
form.submit();
AI-generated code. Review and use carefully. More info on FAQ.
5. Select
Selecting options from dropdown menus.

Java

import org.openqa.selenium.support.ui.Select;

WebElement dropdown = driver.findElement(By.id(dropdownId));
Select select = new Select(dropdown);
select.selectByVisibleText(Option 1);
AI-generated code. Review and use carefully. More info on FAQ.

6. Actions Class
For more complex interactions like drag and drop, double-click, right-click, etc., you can use the Actions class.

Drag and Drop
Java

import org.openqa.selenium.interactions.Actions;

WebElement source = driver.findElement(By.id(sourceId));
WebElement target = driver.findElement(By.id(targetId));

Actions actions = new Actions(driver);
actions.dragAndDrop(source, target).perform();
AI-generated code. Review and use carefully. More info on FAQ.
Double Click
Java

WebElement element = driver.findElement(By.id(elementId));

Actions actions = new Actions(driver);
actions.doubleClick(element).perform();
AI-generated code. Review and use carefully. More info on FAQ.
Right Click (Context Click)
Java

WebElement element = driver.findElement(By.id(elementId));

Actions actions = new Actions(driver);
actions.contextClick(element).perform();
AI-generated code. Review and use carefully. More info on FAQ.
Keyboard Actions
Performing keyboard actions like pressing keys.

Java

import org.openqa.selenium.Keys;

Actions actions = new Actions(driver);
actions.sendKeys(Keys.ENTER).perform();
AI-generated code. Review and use carefully. More info on FAQ.


7. Handling Alerts
Interacting with JavaScript alerts, confirmations, and prompts.

Java

import org.openqa.selenium.Alert;

 Simple Alert
Alert alert = driver.switchTo().alert();
alert.accept();  Click OK

 Confirmation Alert
Alert confirmAlert = driver.switchTo().alert();
confirmAlert.dismiss();  Click Cancel

 Prompt Alert
Alert promptAlert = driver.switchTo().alert();
promptAlert.sendKeys(Sample text);
promptAlert.accept();  Click OK
AI-generated code. Review and use carefully. More info on FAQ.
8. File Uploads
Uploading files using the sendKeys method.

Java

WebElement uploadElement = driver.findElement(By.id(uploadFile));
uploadElement.sendKeys(pathtoyourfile.txt);
AI-generated code. Review and use carefully. More info on FAQ.
These examples cover a wide range of interactions you can perform with Selenium WebDriver in Java. For more detailed information, you can refer to resources like Guru991 and the Selenium Documentation2.

Would you like more details on any specific action or method

Learn more

1

guru99.com
2

selenium.dev